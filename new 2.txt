--seleccion de base de datos fabricante 
use fabricante
--Creacion de tabla
CREATE TABLE fabricante(

  codigo INT PRIMARY KEY,

  nombre VARCHAR(100) NOT NULL

);



CREATE TABLE producto (

  codigo INT PRIMARY KEY,

  nombre VARCHAR(100) NOT NULL,

  precio DOUBLE PRECISION NOT NULL,

  codigo_fabricante INT  NOT NULL,

  FOREIGN KEY (codigo_fabricante) REFERENCES fabricante(codigo)

);



INSERT INTO fabricante VALUES(1, 'Asus');

INSERT INTO fabricante VALUES(2, 'Lenovo');

INSERT INTO fabricante VALUES(3, 'Hewlett-Packard');

INSERT INTO fabricante VALUES(4, 'Samsung');

INSERT INTO fabricante VALUES(5, 'Seagate');

INSERT INTO fabricante VALUES(6, 'Crucial');

INSERT INTO fabricante VALUES(7, 'Gigabyte');

INSERT INTO fabricante VALUES(8, 'Huawei');

INSERT INTO fabricante VALUES(9, 'Xiaomi');



INSERT INTO producto VALUES(1, 'Disco duro SATA3 1TB', 86.99, 5);

INSERT INTO producto VALUES(2, 'Memoria RAM DDR4 8GB', 120, 6);

INSERT INTO producto VALUES(3, 'Disco SSD 1 TB', 150.99, 4);

INSERT INTO producto VALUES(4, 'GeForce GTX 1050Ti', 185, 7);

INSERT INTO producto VALUES(5, 'GeForce GTX 1080 Xtreme', 755, 6);

INSERT INTO producto VALUES(6, 'Monitor 24 LED Full HD', 202, 1);

INSERT INTO producto VALUES(7, 'Monitor 27 LED Full HD', 245.99, 1);

INSERT INTO producto VALUES(8, 'Portátil Yoga 520', 559, 2);

INSERT INTO producto VALUES(9, 'Portátil Ideapd 320', 444, 2);

INSERT INTO producto VALUES(10, 'Impresora HP Deskjet 3720', 59.99, 3);

INSERT INTO producto VALUES(11, 'Impresora HP Laserjet Pro M26nw', 180, 3);

--1) Listar el nombre de todos los productos que hay en la tabla producto.
select *
from producto

--2) Listar los nombres y los precios de los productos de la tabla producto.
select nombre, 
       precio
from producto




--3) Listar el nombre de los fabricantes de la tabla fabricante.
select nombre
from fabricante


--4) Listar todas las columnas de la tabla producto.

select * 
from producto

--5) Listar todas las columnas de la tabla fabricante.
select*
from fabricante


--1) Listar nombre y código de todos los productos del fabricante cuyo código de fabricante es igual a 2.

select nombre, 
       codigo
from producto
where codigo_fabricante = 2



--2) Listar nombre y código de los productos que tienen un precio menor o igual a 120.
select nombre,
       codigo
from producto
where precio<=120
     



--3) Listar el nombre de los productos que tienen un precio mayor o igual a 400.
select nombre, precio
from producto
where precio >= 400




--4) Listar el nombre de los productos que no tienen un precio mayor o igual a 400.

select nombre, precio
from producto
where not precio >= 400



--5) Listar todos los productos que tengan un precio entre 80 y 300, sin utilizar el operador BETWEEN.
select *
from producto
where precio < 300 
and precio >80


--6) Listar todos los productos que tengan un precio entre 60 y 200, utilizando el operador BETWEEN.

select* 
from producto
where precio between 60 and 200



--7) Listar todos los productos que tengan un precio mayor a 200 y que el código de fabricante sea igual a 6.
select * 
from producto
where precio > 200
and codigo_fabricante = 6

--8) Listar todos los productos donde el código de fabricante sea 1, 3 o 5. Sin utilizar el operador IN
select *
from producto 
where codigo_fabricante = 1 
or codigo_fabricante = 3
or codigo_fabricante = 5



--9) Listar todos los productos donde el código de fabricante sea 1, 3 o 5. Utilizando el operador IN.
select*
from producto
where codigo_fabricante in(1,3,5)


--10)Listar el nombre y el precio de los productos, 
--con un aumento del 25% sobre el precio, crear un alias para esta columna llamada Precios
--Actualizados.
Select nombre, precio, 1.25*precio AS "Precios Actualizados"
from producto




--11)Listar los nombres de los fabricantes cuyo nombre termine con la letra e.

select nombre
from fabricante
where nombre like '%e'


--12)Listar los nombres de los fabricantes cuyo nombre contenga la letra w.
 select nombre
 from fabricante
 where nombre like '%w%'
 

--13)Listar todas las columnas de los productos y de acuerdo al precio ordenarlas de manera descendente.

select * 
from producto
order by precio desc



--14)Listar el código y nombre de los fabricantes que tienen productos en la tabla producto.

select fabricante.codigo, fabricante.nombre
from fabricante, producto
where producto.codigo_fabricante = fabricante.codigo



--15)Listar el código y nombre de los fabricantes que tienen productos en la tabla producto, sin listar los códigos que aparecen repetidos.

select distinct fabricante.codigo , fabricante.nombre
from fabricante,producto
where producto.codigo_fabricante = fabricante.codigo


--1) Listar los nombres y los precios de todos los productos de la tabla producto, convirtiendo los nombres a mayúscula.
select UPPER (nombre) AS "Nombre", precio 
from producto 

--2) Listar los nombres y los precios de todos los productos de la tabla producto, convirtiendo los nombres en minúscula.
select lower (nombre) AS "Nombre", precio 
from producto

--3) Listar el nombre de todos los fabricantes en una columna, y en otra columna obtener en mayúscula los dos primeros caracteres del nombre del fabricante.
select nombre, upper (left (nombre,2))
from fabricante

--4) Listar el código de los fabricantes que tienen productos en la tabla producto, eliminando los códigos que aparecen repetidos.

select distinct fabricante.codigo 
from producto, fabricante
where producto.codigo_fabricante = fabricante.codigo


--5) Devolver una lista con las 5 primeras filas de la tabla fabricante.

select  top 5*
from fabricante 

--6) Listar el nombre y el precio del producto más barato. (utilizar solamente las cláusulas ORDER BY y LIMIT).

select top 1 nombre, precio
from producto
order by precio asc

--7) Listar el nombre y el precio del producto más caro. (utilizar solamente las cláusulas ORDER BY y LIMIT).
select top 1 nombre, precio
from producto
order by precio desc

INTRODUCCIÓN A BASE DE DATOS Y SQL
GUÍA DE EJERCICIOS III:

--8) Calcular el número total de productos que hay en la tabla productos.
select  count (distinct nombre) 
from producto

--9) Calcular el número total de fabricantes que hay en la tabla fabricantes.

select count (distinct codigo)
from fabricante


--10)Calcular el número de valores distintos de código de fabricantes que aparecen en la tabla productos.

select* --count (distinct 
from producto


select count ( distinct codigo_fabricante)
from producto

--11)Calcular el promedio del precio de todos los productos.

select avg (precio) 
from producto

--12)Calcular el precio más barato de todos los productos.

select min(precio)
from producto

--13)Calcular el precio más caro de todos los productos.

select max(precio)
from producto

--14)Calcular la suma de los precios de todos los productos.

select sum(precio)
from producto

--1) Devolver una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos.

select distinct fabricante.codigo, fabricante.nombre, producto.nombre
from fabricante,producto
where producto.codigo_fabricante = fabricante.codigo


--2) Devolver una lista con el nombre del producto, precio y nombre de fabricante de todos los productos de la base de datos.
--Ordene el resultado por el nombre del fabricante, por orden alfabético.

select distinct fabricante.codigo, fabricante.nombre,producto.nombre
from fabricante, producto
where producto.codigo_fabricante = fabricante.codigo
order by fabricante.nombre asc

--3) Devolver una lista con el código del producto, nombre del producto, código de fabricante y nombre del
--fabricante, de todos los productos de la base de datos.

select producto.codigo, producto.nombre, fabricante.codigo, fabricante.nombre
from fabricante, producto
where producto.codigo_fabricante = fabricante.codigo 

select producto.codigo, producto.nombre, fabricante.codigo, fabricante.nombre
from fabricante
INNER JOIN producto
ON fabricante.codigo=producto.codigo_fabricante


4) Devolver el nombre del producto, su precio y el nombre de su fabricante, del producto más barato.

select top 1 producto.precio, producto.nombre ,fabricante.nombre
from fabricante
inner join producto
on fabricante.codigo=producto.codigo_fabricante
order by precio asc

select top 1 pro.precio, pro.nombre ,fab.nombre
from fabricante fab
inner join producto pro
on fab.codigo=pro.codigo_fabricante
order by precio asc



5) Devolver el nombre del producto, su precio y el nombre de su fabricante, del producto más caro.

select top 1 pro.precio, pro.nombre, fab.nombre
from fabricante fab
inner join producto pro
on fab.codigo=pro.codigo_fabricante
order by precio desc

6) Devolver una lista de todos los productos del fabricante Lenovo.

select pro.nombre, fab.nombre
from fabricante fab
inner join producto pro
on fab.codigo=pro.codigo_fabricante
where fab.nombre = 'lenovo'


select pro.nombre, 
       fab.nombre
from fabricante fab
inner join producto pro
	on fab.codigo = pro.codigo_fabricante
where fab.nombre = 'lenovo'


--7) Devolver una lista de todos los productos del fabricante Crucial que tengan un precio mayor que 200.
--INTRODUCCIÓN A BASE DE DATOS Y SQL
--CONSULTAS MULTITABLA

select  fab.nombre, pro.nombre
from fabricante fab
inner join producto pro
on fab.codigo =pro.codigo_fabricante
where fab.nombre = 'crucial'
and  precio > 200

--8) Devolver un listado de todos los fabricantes que existen en la base de datos, junto con los productos que
--tiene cada uno de ellos. El listado deberá mostrar también aquellos fabricantes que no tienen productos
--asociados.


select fabricante.codigo, fabricante.nombre, producto.nombre 
FROM fabricante
LEFT JOIN producto 
ON fabricante.codigo = producto.codigo_fabricante 



9) Devolver un listado de todos los productos que existen en la base de datos, junto con los fabricantes que
tiene cada uno de ellos. El listado deberá mostrar también aquellos fabricantes que no tienen productos
asociados.

select *
from fabricante fab
full join producto pro
on fab.codigo = pro.codigo_fabricante

10)Devolver un listado de todos los fabricantes que existen en la base de datos, junto con los productos que
tiene cada uno de ellos. Mostrar solo los fabricantes que tienen una "a" en su nombre. Ordenarlos por el
precio del producto de manera ascendente.


select fab.nombre, pro.nombre
from fabricante fab
inner join producto pro
on fab.codigo = pro.codigo_fabricante
where fab.nombre like '%a%' 
order by precio asc


11)Calcular el promedio del precio de todos los productos del fabricante Asus.

select AVG (pro.precio)
from fabricante fab
inner join producto pro 
on fab.codigo = pro.codigo_fabricante
where fab.nombre like '%asus%'

12)Calcular el precio más barato de todos los productos del fabricante Asus.

select top 1 min(pro.precio) AS 'Precios ASUS'
from fabricante  fab
inner join producto pro
on fab.codigo = pro.codigo_fabricante
where fab.nombre like '%asus%'

13)Mostrar el precio máximo, precio mínimo, promedio del precio y el número total de productos que tiene el
fabricante Crucial.

select max(pro.precio) AS 'max' ,min(pro.precio) AS 'min', avg(pro.precio) as 'pro' , count(pro.codigo)as 'cant'
from fabricante fab
inner join producto pro 
on fab.codigo = pro.codigo_fabricante
where fab.nombre like '%Crucial%'


14) Mostrar el precio máximo, precio mínimo y precio promedio de los productos de cada unos de los
fabricantes. El resultado mostrará el nombre del fabricante junto con los datos que se solicitan

select max(pro.precio) AS 'max' ,min(pro.precio) AS 'min', avg(pro.precio) as 'pro', fab.nombre 
from fabricante fab
inner join producto pro 
on fab.codigo = pro.codigo_fabricante
group by fab.nombre

 BASE DE DATOS Y SQL
JOINS Y FUNCIONES DE AGREGACIÓN

15) Mostrar el precio máximo, precio mínimo y precio promedio de los productos de cada unos de los
fabricantes. El resultado mostrará el nombre del fabricante junto con los datos que se solicitan.

select max(pro.precio), min(pro.precio), avg(pro.precio), fab.nombre
from fabricante fab
inner join producto pro
on fab.codigo = pro.codigo_fabricante 
group by fab.nombre

16)Mostrar el precio máximo, precio mínimo, precio medio y el número total de productos de los fabricantes
que tienen un precio medio superior a 200. No es necesario mostrar el nombre del fabricante, con el
código del mismo es suficiente.

select codigo_fabricante, max(precio), min(precio), avg (precio), count(*)
from producto
group by codigo_fabricante
having avg (precio) > 200

select*
from producto
where codigo_fabricante in (1,2,6)


SELECT codigo_fabricante, MAX(precio), MIN(precio), AVG(precio), COUNT(*)
FROM producto 
GROUP BY codigo_fabricante 
HAVING AVG(precio) > 200




17)Calcular el número de productos que tiene cada fabricante con un precio mayor o igual a 180.

select count (*),codigo_fabricante
from producto
where precio >= 180
group by codigo_fabricante



select codigo_fabricante
from producto
where precio >= 180
group by codigo_fabricante



select avg(codigo)as 'productos', codigo_fabricante
from producto
group by codigo_fabricante


SELECT AVG(precio), codigo_fabricante
FROM producto
GROUP BY codigo_fabricante





 
 SELECT preoducto.nombre,COUNT(*)
 FROM producto 
 INNER JOIN fabricante
 ON producto.codigo_fabricante = fabricante.codigo
 WHERE producto.precio >= 180
 GROUP BY producto.codigo_fabricante

select*
from fabricante

select*
from producto

select count(codigo) as 'codigo producto'
from producto
group by fabricante.producto




18)Devolver un listado con los nombres de los fabricantes que tienen 2 productos o más.

select fab.nombre,count (*)
from fabricante fab
inner join producto pro
on fab.codigo = pro.codigo_fabricante
group by fab.nombre
  having count(*) >= 2
--tenga

19)Devolver todos los productos del fabricante Lenovo. (SIN USAR JOINS).

select *
from fabricante
inner join producto
on fabricante.codigo = producto.codigo_fabricante
where fabricante.nombre like '%Lenovo%'

select*
from fabricante, producto
where fabricante.codigo = producto.codigo_fabricante 
and fabricante.nombre like '%lenovo%'
 


20)Listar el nombre del producto más barato del fabricante Hewlett-Packard.

select top 1 pro.precio,pro.nombre,  fab.nombre 
from fabricante fab
inner join producto pro
on fab.codigo = pro.codigo_fabricante
where fab.nombre like '%Hewlett-Packard%'
order by pro.precio asc



21)Devolver todos los productos de la base de datos que tienen un precio mayor o igual al producto más
caro del fabricante Lenovo.

select *
from fabricante fab
full join producto pro
on fab.codigo = pro.codigo_fabricante
where precio >= (select max(pro.precio)
				from fabricante fab
				full join producto pro
				on fab.codigo = pro.codigo_fabricante
				where fab.nombre like '%lenovo%')


where fab.nombre like '%Lenovo%'
group by fab.nombre
having count(pro.precio) >= pro.precio 


22)Listar el todos los productos del fabricante Asus que tienen un precio superior al precio medio de todos sus
productos.

select *
from producto
inner join fabricante
on producto.codigo_fabricante = fabricante.codigo
where fabricante.nombre like '%Asus%'
and precio >   (select avg (producto.precio)
				from producto
				inner join fabricante
				on producto.codigo_fabricante = fabricante.codigo
				where fabricante.nombre like '%Asus%')


varchar  yyyymmdd
date     yyyy-mm-dd
datetime yyyy-mm-dd hh:mm:ss.mmm

select getdate() 
      --,DATEADD(Month, -1, CONVERT(datetime, getdate(), 106))
	  , FORMAT(getdate(), 'yyyy-MM')
	  ,CONVERT(varchar(6), GETDATE(), 112)

select getdate() 
      ,DATEADD(YEAR, -1, CONVERT(datetime, getdate(), 106))
	  ,DATEADD(Month, -1, getdate())

select '2022-07-01' 
	  ,DATEADD(Month, -1, '2022-07-01')